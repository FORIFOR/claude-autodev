#!/usr/bin/env bash

# GitHub Integration Script for Claude Autodev Projects
# Automatically creates GitHub repo and PR after project completion

PROJECT_NAME=$1
PROJECT_DIR=$2

if [ -z "$PROJECT_NAME" ] || [ -z "$PROJECT_DIR" ]; then
    echo "Usage: $0 <project_name> <project_dir>"
    exit 1
fi

cd "$PROJECT_DIR" || exit 1

echo "🔄 Starting GitHub integration for: $PROJECT_NAME"

# Check if GitHub CLI is available
if ! command -v gh &> /dev/null; then
    echo "❌ GitHub CLI (gh) not found. Please install it first:"
    echo "   brew install gh"
    exit 1
fi

# Check if user is authenticated
if ! gh auth status &> /dev/null; then
    echo "❌ Not authenticated with GitHub. Please run:"
    echo "   gh auth login"
    exit 1
fi

# Check if this is a git repository
if [ ! -d ".git" ]; then
    echo "❌ Not a git repository. Initializing..."
    git init
    git add .
    git commit -m "Initial commit: Auto-generated project $PROJECT_NAME

🤖 Generated with Claude Autodev
Co-Authored-By: Claude <noreply@anthropic.com>"
fi

# Create GitHub repository if it doesn't exist
echo "📦 Creating GitHub repository..."
if ! gh repo view "$PROJECT_NAME" &> /dev/null; then
    gh repo create "$PROJECT_NAME" --public --description "Auto-generated project: $PROJECT_NAME" --source=.
    
    if [ $? -eq 0 ]; then
        echo "✅ GitHub repository created successfully"
    else
        echo "❌ Failed to create GitHub repository"
        exit 1
    fi
else
    echo "📦 Repository already exists"
fi

# Push to main branch
echo "📤 Pushing to GitHub..."
git remote add origin "https://github.com/$(gh api user --jq .login)/$PROJECT_NAME.git" 2>/dev/null || true
git branch -M main
git push -u origin main --force

# Create development branch for PR
BRANCH_NAME="feature/auto-generated-$(date +%Y%m%d-%H%M%S)"
git checkout -b "$BRANCH_NAME"

# Make a small change to trigger PR creation
echo "

## 🤖 Auto-Generated Project

This project was automatically generated using Claude Autodev.

**Generation Date**: $(date)
**Workflow**: Optimized 8-subagent process
**Features**: See SPEC.md and README.md for details

---
*Generated with [Claude Autodev](https://github.com/claude-autodev)*" >> README.md

git add README.md
git commit -m "Add auto-generation metadata

🤖 Generated with Claude Autodev
Co-Authored-By: Claude <noreply@anthropic.com>"

git push -u origin "$BRANCH_NAME"

# Create Pull Request
echo "🔄 Creating Pull Request..."
PR_TITLE="Auto-generated project: $PROJECT_NAME"
PR_BODY="## 🤖 Auto-Generated Project Submission

This PR contains a complete project auto-generated by Claude Autodev.

### 📋 Project Details
- **Name**: $PROJECT_NAME
- **Generated**: $(date)
- **Workflow**: 8-subagent optimized process

### ✅ Completion Checklist
- [x] Core implementation completed
- [x] Tests created and passing
- [x] Code review performed
- [x] Build verification successful
- [x] Documentation created
- [x] End-to-end testing completed

### 🔧 Quality Assurance
This project has been automatically:
1. **Planned** with clear specifications
2. **Implemented** with core functionality
3. **Tested** with comprehensive test suite
4. **Reviewed** by independent code analysis
5. **Built** and verified for functionality
6. **Documented** with setup instructions
7. **Verified** end-to-end

### 📂 Key Files
- \`SPEC.md\` - Project specifications
- \`TODO.md\` - Development checklist
- \`README.md\` - Setup and usage instructions
- \`REVIEW.md\` - Code review findings
- \`RELEASE.md\` - Release notes and features

---
🤖 Generated with [Claude Autodev](https://github.com/claude-autodev)

Co-Authored-By: Claude <noreply@anthropic.com>"

gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base main --head "$BRANCH_NAME"

if [ $? -eq 0 ]; then
    echo "✅ Pull Request created successfully"
    echo "🔗 View at: $(gh pr view --json url --jq .url)"
else
    echo "❌ Failed to create Pull Request"
    exit 1
fi

echo "🎉 GitHub integration completed successfully!"
echo "📦 Repository: https://github.com/$(gh api user --jq .login)/$PROJECT_NAME"
echo "🔄 Pull Request ready for review"